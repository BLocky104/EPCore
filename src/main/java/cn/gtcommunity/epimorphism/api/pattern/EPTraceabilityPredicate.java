package cn.gtcommunity.epimorphism.api.pattern;

import cn.gtcommunity.epimorphism.api.EPAPI;
import cn.gtcommunity.epimorphism.api.block.IGlassTierBlockState;
import gregtech.api.pattern.PatternStringError;
import gregtech.api.pattern.TraceabilityPredicate;
import gregtech.api.util.BlockInfo;
import net.minecraft.block.state.IBlockState;

import java.util.Comparator;
import java.util.LinkedList;
import java.util.function.Supplier;

public class EPTraceabilityPredicate {

    public static Supplier<TraceabilityPredicate> EP_GLASS = () -> new TraceabilityPredicate(blockWorldState -> {
        IBlockState blockState = blockWorldState.getBlockState();
        if (EPAPI.EP_Glass.containsKey(blockState)) {
            IGlassTierBlockState stats = EPAPI.EP_Glass.get(blockState);
            Object currentGlass = blockWorldState.getMatchContext().getOrPut("CasingType", stats);
            if (!currentGlass.equals(stats)) {
                blockWorldState.setError(new PatternStringError("epimorphism.multiblock.pattern.error.glasses"));
                return false;
            }
            blockWorldState.getMatchContext().getOrPut("VABlock", new LinkedList<>()).add(blockWorldState.getPos());
            return true;
        }
        return false;
    }, () -> EPAPI.EP_Glass.entrySet().stream()
            // sort to make autogenerated jei previews not pick random coils each game load
            .sorted(Comparator.comparingInt(entry -> entry.getValue().getTier()))
            .map(entry -> new BlockInfo(entry.getKey(), null))
            .toArray(BlockInfo[]::new))
            .addTooltips("epimorphism.multiblock.pattern.error.glasses");

}
